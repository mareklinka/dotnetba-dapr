# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
############################### 
# Core EditorConfig Options   # 
############################### 
root = true
# All files 
[*] 
indent_style = space 
# Code files 
[*.{cs,csx,vb,vbx}] 
indent_size = 4 
insert_final_newline = true 
charset = utf-8-bom 
end_of_line = crlf
trim_trailing_whitespace = true
############################### 
# .NET Coding Conventions     # 
############################### 
[*.{cs,vb}] 
# Organize usings 
dotnet_sort_system_directives_first = true 
dotnet_separate_import_directive_groups = false
# this. preferences 
dotnet_style_qualification_for_field = false:error 
dotnet_style_qualification_for_property = false:error 
dotnet_style_qualification_for_method = false:error 
dotnet_style_qualification_for_event = false:error 
# Language keywords vs BCL types preferences 
dotnet_style_predefined_type_for_locals_parameters_members = true:error 
dotnet_style_predefined_type_for_member_access = true:error 
# Parentheses preferences 
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning 
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning 
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent 
# Modifier preferences 
dotnet_style_require_accessibility_modifiers = always:error 
dotnet_style_readonly_field = true:error 
# Expression-level preferences 
dotnet_style_object_initializer = true:error 
dotnet_style_collection_initializer = true:error 
dotnet_style_explicit_tuple_names = true:error 
dotnet_style_null_propagation = true:error 
dotnet_style_coalesce_expression = true:error 
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error 
dotnet_prefer_inferred_tuple_names = true:error 
dotnet_prefer_inferred_anonymous_type_member_names = true:error 
dotnet_style_prefer_auto_properties = true:error 
dotnet_style_prefer_conditional_expression_over_assignment = true:error 
dotnet_style_prefer_conditional_expression_over_return = true:error 
############################### 
# C# Coding Conventions       # 
############################### 
[*.cs] 
# var preferences 
csharp_style_var_for_built_in_types = true:error 
csharp_style_var_when_type_is_apparent = true:error 
csharp_style_var_elsewhere = true:error 
# Expression-bodied members 
csharp_style_expression_bodied_methods = when_on_single_line:suggestion 
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion 
csharp_style_expression_bodied_operators = when_on_single_line:suggestion 
csharp_style_expression_bodied_properties = when_on_single_line:suggestion 
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion 
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion 
# Pattern matching preferences 
csharp_style_pattern_matching_over_is_with_cast_check = true:warning 
csharp_style_pattern_matching_over_as_with_null_check = true:warning 
# Null-checking preferences 
csharp_style_throw_expression = true:warning 
csharp_style_conditional_delegate_call = true:warning 
# Modifier preferences 
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error 
# Expression-level preferences 
csharp_prefer_braces = true:error 
csharp_style_deconstructed_variable_declaration = true:suggestion 
csharp_prefer_simple_default_expression = true:warning 
csharp_style_pattern_local_over_anonymous_function = false:silent 
csharp_style_inlined_variable_declaration = true:warning 
############################### 
# C# Formatting Rules         # 
############################### 
# New line preferences 
csharp_new_line_before_open_brace = all 
csharp_new_line_before_else = true 
csharp_new_line_before_catch = true 
csharp_new_line_before_finally = true 
csharp_new_line_before_members_in_object_initializers = true 
csharp_new_line_before_members_in_anonymous_types = true 
csharp_new_line_between_query_expression_clauses = true 
# Indentation preferences 
csharp_indent_case_contents = true 
csharp_indent_switch_labels = true 
csharp_indent_labels = flush_left 
# Space preferences 
csharp_space_after_cast = false 
csharp_space_after_keywords_in_control_flow_statements = true 
csharp_space_between_method_call_parameter_list_parentheses = false 
csharp_space_between_method_declaration_parameter_list_parentheses = false 
csharp_space_between_parentheses = false 
csharp_space_before_colon_in_inheritance_clause = true 
csharp_space_after_colon_in_inheritance_clause = true 
csharp_space_around_binary_operators = before_and_after 
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false 
csharp_space_between_method_call_name_and_opening_parenthesis = false 
csharp_space_between_method_call_empty_parameter_list_parentheses = false 
# Wrapping preferences 
csharp_preserve_single_line_statements = false 
csharp_preserve_single_line_blocks = true 

############################### 
# Naming Conventions          # 
############################### 
# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = error
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# use camel case with _ prefix for private fields, e.g. _myField
dotnet_naming_style.private_field_style.required_prefix           = _ 
dotnet_naming_style.private_field_style.capitalization            = camel_case 

dotnet_naming_symbols.private_fields.applicable_kinds             = field 
dotnet_naming_symbols.private_fields.applicable_accessibilities   = private

dotnet_naming_rule.private_fields_should_be_camel_case_with_suffix.severity        = error 
dotnet_naming_rule.private_fields_should_be_camel_case_with_suffix.symbols         = private_fields 
dotnet_naming_rule.private_fields_should_be_camel_case_with_suffix.style           = private_field_style

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = error
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = error
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = error
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

############################### 
# VB Coding Conventions       # 
############################### 
[*.vb] 
# Modifier preferences 
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:suggestion 
